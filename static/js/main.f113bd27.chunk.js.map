{"version":3,"sources":["App/Layout.js","App/LoadingSpinner.js","App/useData.js","App/Country/Details.js","App/Country/PhotoCard.js","App/Modal.js","App/Country/PhotoViewer.js","App/Country/Photos.js","App/Country/WikiEntry.js","App/Country/index.js","App/Globe/useData.js","App/Globe/Tooltip.js","App/Globe/index.js","App/Globe/utils.js","App/Navbar.js","App/Footer.js","App/index.js","index.js"],"names":["useStyles","makeStyles","container","height","display","gridTemplateRows","gridTemplateColumns","leftColumn","padding","paddingRight","flexDirection","justifyContent","rightColumn","paddingLeft","overflowY","overflowX","Layout","navbar","footer","classes","Paper","className","width","alignItems","LoadingSpinner","style","CircularProgress","useData","useState","data","setData","url","setUrl","config","setConfig","isLoading","setIsLoading","isError","setIsError","useEffect","a","axios","get","result","fetchData","root","border","Details","alphaCode","capital","currencies","population","area","languages","details","label","value","format","slice","LANGUAGES_LIMIT","map","l","name","join","TableContainer","Table","size","TableBody","TableRow","key","hover","TableCell","component","variant","gridRowEnd","spans","img","cursor","PhotoCard","memo","photo","onClick","imageRef","useRef","setSpans","updateSpans","current","clientHeight","Math","ceil","imageEl","addEventListener","removeEventListener","urls","alt_description","ref","src","small","alt","theme","modal","div","outline","boxShadow","shadows","Modal","inZoom","children","other","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Zoom","in","referralString","figure","margin","backgroundColor","source","PhotoViewer","description","links","user","regular","Typography","align","Link","href","html","paddingTop","gridAutoRows","gridGap","Photos","term","isModalOpen","setIsModalOpen","currentIndex","setCurrentIndex","params","query","per_page","headers","Authorization","process","photos","results","clickedPhoto","i","id","open","onClose","WikiEntry","entry","extract","length","split","variont","infoBox","columnGap","Country","countryProps","columns","topologyUrl","high","low","tooltip","position","borderRadius","color","textAlign","pointerEvents","transform","zIndex","Tooltip","forwardRef","props","palette","primary","background","getContrastText","svg","country","fill","default","stroke","transition","strokeWidth","main","selected","light","circle","Globe","sensitivity","initialAlphaCode","onCountryClick","svgRef","tooltipRef","selectedCountryCode","setSelectedCountryCode","projection","useMemo","geoOrthographic","scale","center","rotate","translate","initialScale","path","geoPath","resolution","Promise","all","json","then","topology","isoCodes","countriesGeoJSON","feature","objects","countries","features","forEach","isoCodeObj","find","properties","numericCode","catch","select","selectAll","call","selection","drag","on","event","k","dx","dy","attr","dragBehaviour","maxZoom","minZoom","zoom","zoomValue","zoomBehaviour","handleMouseover","duration","pageX","pageY","document","body","xOffset","scrollLeft","offsetLeft","handleMouseout","getTooltipHandlers","e","d","currentRotate","centroid","invert","longitude","latitude","nextRotate","r","interpolate","attrTween","t","pow","pathD","cx","cy","gridColumn","text","toolbar","title","flex","Navbar","onThemeIconClick","type","useTheme","githubIcon","aria-label","IconButton","edge","GitHub","themeIcon","AppBar","Toolbar","fontSize","Footer","year","Date","getFullYear","myGithubLink","target","rel","initialState","App","darkMode","setDarkMode","createMuiTheme","selectedCountry","setSelectedCountry","ThemeProvider","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f113bd27.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    height: '100vh',\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto 1fr',\r\n    gridTemplateColumns: '4fr 6fr',\r\n  },\r\n  leftColumn: {\r\n    padding: 15,\r\n    paddingRight: 10,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n  rightColumn: {\r\n    padding: 15,\r\n    paddingLeft: 10,\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n  },\r\n});\r\n\r\nexport const Layout = ({ navbar, leftColumn, rightColumn, footer }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {navbar}\r\n      <div className={classes.leftColumn}>\r\n        {leftColumn}\r\n        {footer}\r\n      </div>\r\n      <div className={classes.rightColumn}>{rightColumn}</div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport const LoadingSpinner = ({ height }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container} style={height ? { height } : null}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useData = () => {\r\n  const [data, setData] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n  const [config, setConfig] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const result = await axios.get(url, config);\r\n        setData(result.data)\r\n\r\n      } catch (error) {\r\n        setIsError(error);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [url, config]);\r\n\r\n  return [{ data, isLoading, isError }, { setUrl, setConfig }]\r\n}","import React, { useEffect } from 'react';\r\nimport { format } from 'd3';\r\nimport {\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from '@material-ui/core';\r\n\r\nimport { LoadingSpinner } from '../LoadingSpinner';\r\nimport { useData } from '../useData';\r\n\r\nconst LANGUAGES_LIMIT = 4;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // Remove border from last detail item\r\n    'tr:last-child': {\r\n      'th, td': {\r\n        border: 0\r\n      }\r\n    },\r\n    'th': {\r\n      width: '35%'\r\n    }\r\n  }\r\n})\r\n\r\nexport const Details = ({ alphaCode }) => {\r\n  const classes = useStyles();\r\n\r\n  const [{ data, isLoading }, { setUrl }] = useData();\r\n\r\n  useEffect(() => {\r\n    setUrl(`https://restcountries.eu/rest/v2/alpha/${alphaCode}`);\r\n  }, [alphaCode, setUrl])\r\n\r\n  if (!data || isLoading) return <LoadingSpinner />;\r\n\r\n  const { capital, currencies, population, area, languages } = data;\r\n  const details = [\r\n    { label: 'Capital', value: capital },\r\n    { label: 'Population', value: format(',d')(population) },\r\n    { label: 'Area', value: format(',d')(area) },\r\n    { label: 'Languages', value: languages.slice(0, LANGUAGES_LIMIT + 1).map(l => l.name).join(', ') },\r\n    { label: 'Currency', value: currencies[0].name },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer className={classes.root}>\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          {details.map(({ label, value }) => (\r\n            <TableRow key={label} hover>\r\n              <TableCell component=\"th\" variant=\"head\">{label}</TableCell>\r\n              <TableCell>{label === 'Area' ? <>{value} km<sup>2</sup></> : value}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React, { useEffect, useRef, useState, memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { LoadingSpinner } from '../LoadingSpinner';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    gridRowEnd: (spans) => `span ${spans}`,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n  },\r\n});\r\n\r\nexport const PhotoCard = memo(({ photo, onClick }) => {\r\n  const imageRef = useRef();\r\n  const [spans, setSpans] = useState(0);\r\n\r\n  const classes = useStyles(spans);\r\n\r\n  useEffect(() => {\r\n    if (!photo) return;\r\n\r\n    const updateSpans = () => {\r\n      const height = imageRef.current.clientHeight;\r\n      setSpans(Math.ceil(height / 10 + 1));\r\n    };\r\n\r\n    const imageEl = imageRef.current;\r\n    imageEl.addEventListener('load', updateSpans);\r\n\r\n    return () => {\r\n      imageEl.removeEventListener('load', updateSpans);\r\n    };\r\n  }, [photo]);\r\n\r\n  if (!photo) return <LoadingSpinner />;\r\n  const { urls, alt_description } = photo;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <img\r\n        className={classes.img}\r\n        ref={imageRef}\r\n        src={urls.small}\r\n        alt={alt_description}\r\n        onClick={onClick}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Modal as MuiModal,\r\n  Backdrop,\r\n  Zoom,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  div: {\r\n    outline: 'none',\r\n    boxShadow: theme.shadows[5],\r\n  },\r\n}));\r\n\r\nexport const Modal = ({ inZoom, children, ...other }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiModal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Zoom in={inZoom}>\r\n        <div className={classes.div}>{children}</div>\r\n      </Zoom>\r\n    </MuiModal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst referralString = '?utm_source=your_app_name&utm_medium=referral';\r\n\r\nconst useStyles = makeStyles({\r\n  figure: {\r\n    margin: '0 auto',\r\n    padding: 25,\r\n    backgroundColor: 'white',\r\n    outline: 'none',\r\n    height: '85vh',\r\n  },\r\n  img: {\r\n    height: '100%',\r\n  },\r\n  source: {\r\n\r\n  }\r\n});\r\n\r\nexport const PhotoViewer = ({ photo }) => {\r\n  const classes = useStyles();\r\n  const { urls, description, links, user: { name } } = photo;\r\n\r\n  return (\r\n    <figure className={classes.figure}>\r\n      <img className={classes.img} src={urls.regular} alt={description} />\r\n      <figcaption>\r\n        <Typography variant=\"caption\" display=\"block\" align=\"center\">\r\n          by{' '}\r\n          <Link href={links.html + referralString}>{name}</Link> on{' '}\r\n          <Link href={`https://unsplash.com/${referralString}`}>Unsplash</Link>\r\n        </Typography>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n};\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { PhotoCard } from './PhotoCard';\r\nimport { LoadingSpinner } from '../LoadingSpinner';\r\nimport { useData } from '../useData';\r\nimport { Modal } from '../Modal';\r\nimport { PhotoViewer } from './PhotoViewer';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: '100%',\r\n    paddingTop: 10,\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\r\n    gridAutoRows: 10,\r\n    gridGap: '0 10px',\r\n  },\r\n  figure: {\r\n    margin: '0 auto',\r\n    padding: 25,\r\n    backgroundColor: 'white',\r\n    outline: 'none',\r\n    height: '85vh',\r\n  },\r\n  img: {\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nexport const Photos = memo(({ term }) => {\r\n  const classes = useStyles();\r\n\r\n  const [{ data, isLoading }, { setUrl, setConfig }] = useData();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(1);\r\n  const handlePhotoClick = (index) => {\r\n    setCurrentIndex(index);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUrl('https://api.unsplash.com/search/photos/');\r\n    setConfig({\r\n      params: {\r\n        query: term,\r\n        per_page: 12,\r\n      },\r\n      headers: {\r\n        Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_KEY}`,\r\n      },\r\n    });\r\n  }, [term, setUrl, setConfig]);\r\n\r\n  if (!data || isLoading) return <LoadingSpinner height={300} />;\r\n\r\n  const photos = data.results;\r\n  const clickedPhoto = photos[currentIndex];\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {photos &&\r\n        photos.map((photo, i) => (\r\n          <PhotoCard\r\n            key={photo.id}\r\n            onClick={() => handlePhotoClick(i)}\r\n            photo={photo}\r\n          />\r\n        ))}\r\n      <Modal \r\n        open={isModalOpen} \r\n        inZoom={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n      >\r\n        <PhotoViewer photo={clickedPhoto} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { LoadingSpinner } from '../LoadingSpinner';\r\n\r\nimport { useData } from '../useData';\r\n\r\nconst MAX_ENTRY_LENGTH = 480;\r\n\r\nexport const WikiEntry = ({ term }) => {\r\n  const [{ data, isLoading }, { setUrl }] = useData();\r\n\r\n  useEffect(() => {\r\n    setUrl(`https://en.wikipedia.org/api/rest_v1/page/summary/${term}`);\r\n  }, [term, setUrl]);\r\n\r\n  if (isLoading || !data) return <LoadingSpinner />;\r\n\r\n  // Keep removing one sentence from the entry until it is less than max length\r\n  let entry = data.extract;\r\n  while (entry.length >= MAX_ENTRY_LENGTH) {\r\n    entry = entry.split('. ').slice(0, -1).join('. ') + '.';\r\n  }\r\n\r\n  return (\r\n    <div className=\"WikiEntry\">\r\n      <Typography variont=\"body2\" align=\"justify\">\r\n        {entry}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo } from 'react';\r\n\r\nimport { Details } from './Details';\r\nimport { Photos } from './Photos';\r\nimport { WikiEntry } from './WikiEntry';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  infoBox: {\r\n    height: '200',\r\n    display: 'grid',\r\n    gridTemplateColumns: '5.5fr 4.5fr',\r\n    columnGap: 10,\r\n  }\r\n})\r\n\r\nexport const Country = memo(({ countryProps: { name, alphaCode } }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.infoBox}>\r\n        <WikiEntry term={name} />\r\n        <Details alphaCode={alphaCode} />\r\n      </div>\r\n      <Photos term={name} columns={3} />\r\n    </div>\r\n  );\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { json } from 'd3';\r\nimport { feature } from 'topojson';\r\n\r\nconst topologyUrl = {\r\n  high: 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json',\r\n  low: 'https://unpkg.com/world-atlas@2.0.2/countries-110m.json',\r\n}\r\n\r\nconst isoCodesUrl = 'https://gist.githubusercontent.com/sitek94/4339d86883340aac67cf61a5ed7bb05e/raw/ISO-3166-Countries-with-Regional-Codes.json';\r\n\r\nexport const useData = ({ resolution }) => {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    Promise.all([\r\n      /**\r\n       * Because topojson data provides only numeric ISO 3166 codes,\r\n       * additionaly I fetch more iso codes data, so I can extend each country object\r\n       * with ISO 3166 alpha-3 code.\r\n       * \r\n       * This will be useful when fetching more data about each country.\r\n       */\r\n      json(topologyUrl[resolution]),\r\n      json(isoCodesUrl)\r\n    ])\r\n    .then(([topology, isoCodes]) => {\r\n\r\n      // Convert TopoJSON to GeoJSON \r\n      const countriesGeoJSON = feature(topology, topology.objects.countries);\r\n\r\n      // Extend properties of each feature with ISO CODES\r\n      countriesGeoJSON.features.forEach(feature => {\r\n        // Some countries in the collection don't have an id\r\n        if (feature.id) {\r\n          const isoCodeObj = isoCodes.find(country => country['country-code'] === feature.id);\r\n          feature.properties = {\r\n            name: isoCodeObj.name,\r\n            alphaCode: isoCodeObj['alpha-3'],\r\n            numericCode: isoCodeObj['country-code']\r\n          }\r\n        }\r\n      })\r\n\r\n      setData(countriesGeoJSON);\r\n    })\r\n    .catch(setIsError);\r\n\r\n    setIsLoading(false);\r\n  }, [resolution]);\r\n\r\n  return [{ data, isLoading, isError }];\r\n}","import React, { forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  tooltip: {\r\n    position: 'absolute',\r\n    padding: 5,\r\n    borderRadius: 6,\r\n    color: '#fff',\r\n    backgroundColor: 'rgba(0,0,0, .8)',\r\n    textAlign: 'center',\r\n   \r\n    pointerEvents: 'none',\r\n    transform: 'translate(-50%, 0)',\r\n    zIndex: '1',\r\n  },\r\n});\r\n\r\n/**\r\n * Tooltip component \r\n * \r\n * @param ref it needs ref so that a component that renders it can assign\r\n *            event handlers to the tooltip\r\n */ \r\nexport const Tooltip = forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tooltip} ref={ref} />\r\n  )\r\n});\r\n\r\n/**\r\n * Get tooltip event handlers\r\n * \r\n * @param selection when called with selection using d3.select() method \r\n *                  it returns mouseover and mouseout event handlers\r\n */\r\nexport const getTooltipHandlers = (selection) => {\r\n  if (!selection) return;\r\n\r\n  // Tooltip container\r\n  const tooltip = selection\r\n    .style('opacity', 0);\r\n\r\n  // Mouse over handler\r\n  const handleMouseover = (event, { properties: { name } }) => {\r\n\r\n  // Tooltip transition\r\n  tooltip.transition()\r\n    .duration(900)\t\t\r\n    .style(\"opacity\", .9);\r\n\r\n  // Update tooltip text\r\n  tooltip.html(name);\r\n\r\n  // Get constants to compute tooltip position\r\n  const { pageX, pageY } = event;\r\n  const { scrollLeft, offsetLeft } =  document.body;\r\n  const yOffset = -70;\r\n  const xOffset = scrollLeft + offsetLeft;\r\n\r\n  // Update tooltip position\r\n  tooltip\r\n    .style(\"left\", pageX + xOffset + \"px\")\t\t\r\n    .style(\"top\", pageY + yOffset + \"px\");\r\n  }\r\n\r\n  // Mouse out handler\r\n  const handleMouseout = () => {\r\n    tooltip.transition()\t\t\r\n      .duration(500)\t\t\r\n      .style(\"opacity\", 0);\t\r\n  }\r\n\r\n  return { handleMouseover, handleMouseout };\r\n}","import React, { useState, useEffect, useRef, memo, useMemo } from 'react';\r\nimport { geoPath, geoOrthographic, select, interpolate } from 'd3';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { useData } from './useData';\r\nimport { dragBehaviour, zoomBehaviour } from './utils';\r\nimport { LoadingSpinner } from '../LoadingSpinner';\r\nimport { Tooltip, getTooltipHandlers } from './Tooltip';\r\n\r\nconst useStyles = makeStyles(\r\n  ({ palette: { primary, background, getContrastText } }) => ({\r\n    svg: {\r\n      display: 'block',\r\n      margin: '0 auto',\r\n    },\r\n    country: {\r\n      fill: background.default,\r\n      stroke: getContrastText(background.default),\r\n      transition: 'fill .5s',\r\n      strokeWidth: 0.25,\r\n      '&:hover': {\r\n        fill: primary.main,\r\n      },\r\n    },\r\n    selected: {\r\n      fill: primary.light,\r\n    },\r\n    circle: {\r\n      fill: getContrastText(background.default),\r\n      transition: 'fill .5s',\r\n    },\r\n  })\r\n);\r\n\r\nexport const Globe = memo(\r\n  ({\r\n    width = 600,\r\n    height = 600,\r\n    sensitivity = 75,\r\n    initialAlphaCode,\r\n    onCountryClick,\r\n  }) => {\r\n    const classes = useStyles();\r\n\r\n    // Refs\r\n    const svgRef = useRef(null);\r\n    const tooltipRef = useRef(null);\r\n\r\n    // Selected country alpha code - used for adding 'selected' class\r\n    const [selectedCountryCode, setSelectedCountryCode] = useState(initialAlphaCode);\r\n\r\n    // Projection\r\n    // useMemo is important here because we want to create a projection only once\r\n    const projection = useMemo(\r\n      () =>\r\n        geoOrthographic()\r\n          .scale(250)\r\n          .center([0, 0])\r\n          .rotate([0, -30])\r\n          .translate([width / 2, height / 2]),\r\n      [height, width]\r\n    );\r\n    // Initial scale\r\n    const initialScale = projection.scale();\r\n\r\n    // Path generator\r\n    const path = geoPath().projection(projection);\r\n\r\n    // Fetch TopoJSON data\r\n    const [{ data, isLoading }] = useData({ resolution: 'low' });\r\n\r\n    // Draw the globe\r\n    useEffect(() => {\r\n      if (!data) return;\r\n\r\n      // Selectors\r\n      const svg = select(svgRef.current);\r\n      const tooltip = select(tooltipRef.current);\r\n      const circle = svg.select('circle');\r\n      const countries = svg.selectAll(`path`);\r\n\r\n      // Apply zoom and drag\r\n      svg\r\n        // Drag\r\n        .call(\r\n          dragBehaviour({\r\n            selection: countries,\r\n            path,\r\n            projection,\r\n            sensitivity,\r\n          })\r\n        )\r\n        // Zoom\r\n        .call(\r\n          zoomBehaviour({\r\n            selection: countries,\r\n            path,\r\n            projection,\r\n            circle,\r\n            initialScale,\r\n          })\r\n        );\r\n\r\n      // Click event handler\r\n      const handleClick = (e, d) => {\r\n        // Store the current rotation and scale:\r\n        const currentRotate = projection.rotate();\r\n\r\n        // Get projected planar centroid (in pixels)\r\n        const centroid = path.centroid(d);\r\n        // Converts centroid to [longitude, latitude] in degrees\r\n        const [longitude, latitude] = projection.invert(centroid);\r\n\r\n        // Rotate the projection\r\n        projection.rotate([-longitude, -latitude]);\r\n        // Update path generator with new projection\r\n        path.projection(projection);\r\n\r\n        // Calculate next rotation\r\n        const nextRotate = projection.rotate();\r\n\r\n        // Create interpolator function\r\n        const r = interpolate(currentRotate, nextRotate);\r\n\r\n        // Update countries\r\n        countries\r\n          .transition()\r\n          .attrTween('d', (d) => (t) => {\r\n            projection.rotate(r(Math.pow(t, 0.33)));\r\n            path.projection(projection);\r\n\r\n            // When interpolator returns null, Chrome throws errors for\r\n            // <path> with attribute d=\"null\"\r\n            const pathD = path(d);\r\n            return pathD !== null ? pathD : '';\r\n          })\r\n          .duration(1000);\r\n\r\n        onCountryClick(d.properties);\r\n        setSelectedCountryCode(d.properties.alphaCode);\r\n      };\r\n\r\n      // Mouseover, mouseout event handlers\r\n      const { handleMouseover, handleMouseout } = getTooltipHandlers(tooltip);\r\n\r\n      // Update countries\r\n      countries\r\n        .data(data.features)\r\n        .join('path')\r\n        .attr('d', path)\r\n        .on('click', handleClick)\r\n        .on('mouseover', handleMouseover)\r\n        .on('mouseout', handleMouseout);\r\n    }, [\r\n      data,\r\n      path,\r\n      projection,\r\n      initialScale,\r\n      sensitivity,\r\n      onCountryClick,\r\n      classes,\r\n    ]);\r\n\r\n    if (!data || isLoading) return <LoadingSpinner />;\r\n\r\n    return (\r\n      <>\r\n        <svg ref={svgRef} className={classes.svg} width={width} height={height}>\r\n          <circle\r\n            className={classes.circle}\r\n            cx={width / 2}\r\n            cy={height / 2}\r\n            r={250}\r\n          />\r\n          <g>\r\n            {data.features.map(({ properties: { name, alphaCode } }) => (\r\n              <path\r\n                key={name}\r\n                id={alphaCode}\r\n                className={`${classes.country} ${\r\n                  selectedCountryCode === alphaCode && classes.selected\r\n                }`}\r\n              />\r\n            ))}\r\n          </g>\r\n        </svg>\r\n        <Tooltip ref={tooltipRef} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import { drag, zoom } from 'd3';\r\n\r\n// Drag\r\nexport const dragBehaviour = ({ \r\n  selection,\r\n  projection, \r\n  path, \r\n  sensitivity \r\n}) => drag()\r\n  .on('drag', (event) => {\r\n    const rotate = projection.rotate();\r\n    const k = sensitivity / projection.scale();\r\n\r\n    // Update projection\r\n    projection.rotate([rotate[0] + event.dx * k, rotate[1] - event.dy * k]);\r\n\r\n    // Update path generator with new projection\r\n    path.projection(projection);\r\n\r\n    // Update selection\r\n    selection.attr('d', path);\r\n  });\r\n\r\n// Zoom\r\nexport const zoomBehaviour = ({\r\n  selection,\r\n  projection,\r\n  path,\r\n  initialScale,\r\n  circle,\r\n  maxZoom = 20,\r\n  minZoom = 0.3,\r\n}) => zoom()\r\n  .on('zoom', (event) => {\r\n    const zoomValue = event.transform.k;\r\n\r\n    // Reached max/min zoom\r\n    if (zoomValue >= maxZoom) event.transform.k = maxZoom;\r\n    if (zoomValue <= minZoom) event.transform.k = minZoom;\r\n    else {\r\n\r\n      // Update projection\r\n      projection.scale(initialScale * event.transform.k);\r\n\r\n      // Update path generator with new projection\r\n      path.projection(projection);\r\n\r\n      // Update selection\r\n      selection.attr('d', path);\r\n      circle.attr('r', projection.scale());\r\n    } \r\n  });\r\n","import React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport {\r\n  PublicOutlined as GlobeIcon,\r\n  Brightness4 as MoonIcon,\r\n  Brightness7 as SunIcon,\r\n  GitHub as GitHubIcon,\r\n} from '@material-ui/icons';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n  root: {\r\n    gridColumn: '1 / span 2',\r\n    color: palette.text.primary,\r\n    backgroundColor: palette.background.default,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n  },\r\n  title: {\r\n    flex: 1,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport const Navbar = ({ title, onThemeIconClick }) => {\r\n  const {\r\n    palette: { type },\r\n  } = useTheme();\r\n  const classes = useStyles();\r\n\r\n  // GitHub repository icon\r\n  const githubIconLabel = 'GitHub repository';\r\n  const githubIcon = (\r\n    <Tooltip title={githubIconLabel} aria-label={githubIconLabel}>\r\n      <IconButton\r\n        component=\"a\"\r\n        edge=\"end\"\r\n        color=\"inherit\"\r\n        aria-label={githubIconLabel}\r\n      >\r\n        <GitHubIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  // Theme toggle icon\r\n  const themeIconLabel = 'Toggle light/dark theme';\r\n  const themeIcon = (\r\n    <Tooltip title={themeIconLabel} aria-label={themeIconLabel}>\r\n      <IconButton\r\n        edge=\"end\"\r\n        color=\"inherit\"\r\n        aria-label={themeIconLabel}\r\n        onClick={onThemeIconClick}\r\n      >\r\n        {type === 'light' ? <MoonIcon /> : <SunIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <AppBar className={classes.root} position=\"static\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <GlobeIcon fontSize=\"large\" />\r\n        <Typography className={classes.title} variant=\"h4\">{title}</Typography>\r\n        {githubIcon}\r\n        {themeIcon}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React, { memo } from 'react';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nexport const Footer = memo(() => {\r\n  const year = new Date().getFullYear();\r\n\r\n  const myGithubLink = (\r\n    <Link href=\"https://github.com/sitek94\" target=\"_blank\"  variant=\"body2\" rel=\"noopener\">\r\n      Maciek Sitkowski\r\n    </Link>\r\n  )\r\n  \r\n  return (\r\n    <footer>\r\n      <Typography>&copy; {year} by {myGithubLink}</Typography>\r\n    </footer>\r\n  )\r\n})","import React, { useState } from 'react';\n\nimport { Layout } from './Layout';\nimport { Country } from './Country';\nimport { Globe } from './Globe';\nimport { Navbar } from './Navbar';\nimport { Footer } from './Footer';\nimport { ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\n\nconst initialState = {\n  name: 'Poland',\n  alphaCode: 'POL',\n};\n\nexport const App = () => {\n  // Dark/light mode\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n      primary: {\n        main: '#1976d2', // Shade of blue from Material UI website\n      },\n    },\n  });\n  const handleDarkModeToggle = () => setDarkMode(!darkMode);\n\n  // Selected country\n  const [selectedCountry, setSelectedCountry] = useState(initialState);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout\n        navbar={\n          <Navbar\n            title={selectedCountry.name}\n            onThemeIconClick={handleDarkModeToggle}\n          />\n        }\n        leftColumn={\n          <Globe\n            initialAlphaCode={initialState.alphaCode}\n            onCountryClick={setSelectedCountry}\n          />\n        }\n        rightColumn={<Country countryProps={selectedCountry} />}\n        footer={<Footer />}\n      />\n    </ThemeProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}